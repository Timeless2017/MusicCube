所有要打包的资源放在EditorResources文件夹下的文件夹里，不能直接放在EditorResources文件夹下，同个文件夹下的物体会打包到同一个AssetBundle里
Scene会打包成.u3d包，其他文件会打包成.assetbundle包

AssetBundleManager的方法：
1、AssetBundleManager.Instance.LoadAsset<T>(path);
使用方法同Resources.Load<T>(path),只要输入文件在EditorResources下的路径名及资源名，会自动加载对应包以及依赖的包并获取资源。

2、AssetBundleManager.Instance.UnloadAssetBundle(path);
输入EditorResources下的文件名，则把这个文件打包的AssetBundle卸载，并检查其依赖的包是否还有被别的包依赖，如果没有，把依赖的包也卸载了（递归下去）
举例：A包与B包都依赖C包，卸载A包，检测C包是否还有被别的包依赖，此时C包被B包依赖，所以只卸载A包。然后卸载B包，此时C包已经没有被依赖，C包也卸载掉。
该方法还可以通过AssetBundleManager.Instance.UnloadAssetBundle(包名，true)调用

3、AssetBundleManager.Instance.UnloadFolder(path);
输入EditorResources下的文件名,把该文件夹以及该文件夹下所有子文件夹打的包都卸载（通过UnloadAssetBundle，也就是这些包依赖的包如果没别的包依赖也会卸载）
方便于整个模块的卸载

4、AssetBundleManager.Instance.LoadScene(path);
//还没写

5、AssetBundleManager.Instance.GetAllLoadedAB();
获取所有已加载的包名的数组，调试用

以上的方法都在AssetBundleTest脚本试用了，可通过这个脚本看怎么使用的